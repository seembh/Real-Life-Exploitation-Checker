import json
from typing import List


class ActionParameter(object):
    def __init__(self, target: str, value_expected=True):
        self.target = target
        self.value_expected = value_expected


class Action(object):
    def __init__(self, action_name: str, action_parameters: List[ActionParameter]):
        self.action_name = action_name
        self.action_parameters = action_parameters


class RLE(object):
    def __init__(self, actions: List[Action]):
        self.actions = actions


action1_parameters = ActionParameter(target="WIN")
action2_parameters = ActionParameter(target="Sys32")

action1 = Action(action_name="READ_REGISTRY", action_parameters=action1_parameters)
action2 = Action(action_name="READ_FILE", action_parameters=action2_parameters)

rle_script = RLE(actions=[action1, action2])

json_data = json.dumps(rle_script, default=lambda o: o.__dict__, indent=4)
print(json_data)

with open("venv/Input/out.json", "w") as outfile:
    outfile.write(json_data)
