import os
import subprocess
import sys
import win32com.shell.shell as shell
import win32con
from textx import metamodel_from_file
import ctypes, sys

current_dir = os.getcwd()
path_to_script = str(current_dir + "\script.ps1")
print(path_to_script)
shell = str('powershell.exe ' + path_to_script + " -Verb RunAs")
print(shell)

def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False

if is_admin():
    print("nothing")
else:
    # Re-run the program with admin rights
    ctypes.windll.shell32.ShellExecuteW(None, "runas", sys.executable, " ".join(sys.argv), None, 1)




psResult = subprocess.Popen([r'powershell.exe',
                                 '-ExecutionPolicy',
                                 'Unrestricted',
                                 path_to_script,
                                 ],
                                stdout=subprocess.PIPE,
                                stderr=subprocess.PIPE)
psResult.communicate()


rle_mm = metamodel_from_file('rle.tx')
rle_model = rle_mm.model_from_file('input.rbt')


class Program(object):
    def __init__(self):
        self.actions = []

    def __str__(self):
        return f"Program is loading..."

    def interpret(self, model):

        # model is an instance of Program
        for c in model.commands:
            if c.__class__.__name__ == "ReadRegistryCommand":
                print(c.target)


program = Program()
program.interpret(rle_model)
