import ctypes
import os
import subprocess
import sys


def check_output(target, action):
    # TODO for each action, check output accordingly
    f = open(path_to_script, "r")


def get_path_to_script():
    current_dir = os.getcwd()
    return str(current_dir + "\script.ps1")


def get_path_to_output():
    current_dir = os.getcwd()
    return str(current_dir + "\output.tmp")


def write_to_script(string_to_write):
    f = open(path_to_script, "w")
    f.write("Set-ExecutionPolicy RemoteSigned\n")
    f.write(string_to_write + "> \".\\output.tmp\"\n")
    f.write("Exit\n")
    f.write("Set-ExecutionPolicy Restricted\n")

    f.close()


# Run python script as administrator
def runPythonAsAdmin():
    def is_admin():
        try:
            return ctypes.windll.shell32.IsUserAnAdmin()
        except:
            return False

    if is_admin():
        runPowershellScript()
    else:
        # Re-run the program with admin rights
        ctypes.windll.shell32.ShellExecuteW(None, "runas", sys.executable, " ".join(sys.argv), None, 1)


# Run the script
def runPowershellScript():
    # This will run as admin if runPythonAsAdmin is successful
    # print(path_to_script)
    psResult = subprocess.Popen([r'powershell.exe',
                                 '-ExecutionPolicy',
                                 'Unrestricted',
                                 path_to_script,
                                 ],
                                stdout=subprocess.PIPE,
                                stderr=subprocess.PIPE)
    psResult.communicate()


path_to_script = get_path_to_script()
path_to_output = get_path_to_output()
